on: [push]

name: CI

jobs:
  build_and_test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@main

      - name: Run bootstrap
        shell: bash
        run: |
          ./hooks/pre/bootstrap
        env:
          REPO: ${{github.workspace}}

      - name: Verify Xcode Command Line Tools installation
        shell: bash
        run: |
          if ! xcode-select -p >/dev/null 2>&1; then
            echo "Error: Xcode Command Line Tools are not installed"
            exit 1
          fi
          echo "✅ Xcode Command Line Tools are installed: $(xcode-select -p)"
          echo "✅ Git is available: $(git --version)"

      - name: Verify brew installation
        shell: bash
        run: |
          if ! command -v brew >/dev/null 2>&1; then
            echo "Error: Homebrew is not installed"
            exit 1
          fi
          echo "✅ Homebrew is installed: $(brew --version | head -n1)"

      - name: Verify KeePassXC CLI installation
        shell: bash
        run: |
          if ! command -v keepassxc-cli >/dev/null 2>&1; then
            echo "Error: KeePassXC CLI is not installed"
            exit 1
          fi
          echo "✅ KeePassXC CLI is installed: $(keepassxc-cli --version)"

  test_remote_install:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@main

      - name: Test remote install script
        shell: bash
        run: |
          # Test the remote install script as a user would on a new macOS machine
          # This simulates running: sh -c "$(curl -fsSL https://raw.githubusercontent.com/cearley/dotfiles/remote_install.sh)"
          
          # Since we're in CI, we'll run the script directly from the repo instead of downloading it
          chmod +x ./remote_install.sh
          
          # Run the script with timeout to prevent hanging
          timeout 300s ./remote_install.sh || {
            exit_code=$?
            if [ $exit_code -eq 124 ]; then
              echo "❌ Remote install script timed out after 5 minutes"
            else
              echo "❌ Remote install script failed with exit code: $exit_code"
            fi
            exit 1
          }

      - name: Verify remote install results
        shell: bash
        run: |
          # Verify that chezmoi was installed and initialized
          if ! command -v chezmoi >/dev/null 2>&1; then
            echo "❌ chezmoi was not installed by remote_install.sh"
            exit 1
          fi
          echo "✅ chezmoi is installed: $(chezmoi --version)"
          
          # Verify that chezmoi source directory exists
          if [ ! -d "$HOME/.local/share/chezmoi" ]; then
            echo "❌ chezmoi source directory was not created"
            exit 1
          fi
          echo "✅ chezmoi source directory exists"
          
          # Verify that the repository was cloned
          if [ ! -f "$HOME/.local/share/chezmoi/README.md" ]; then
            echo "❌ dotfiles repository was not cloned"
            exit 1
          fi
          echo "✅ dotfiles repository was cloned successfully"
