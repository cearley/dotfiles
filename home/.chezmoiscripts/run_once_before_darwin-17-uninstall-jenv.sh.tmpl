{{- if and (eq .chezmoi.os "darwin") (has "dev" .tags) -}}
#!/bin/bash

# jenv uninstallation script for macOS development environments
# Safely removes jenv installed via chezmoi external from .chezmoiexternal.toml.tmpl
set -euo pipefail

# Source shared utility functions
source "{{ .chezmoi.sourceDir -}}/scripts/script-utils.sh"

# Constants
readonly JENV_HOME="$HOME/.jenv"
readonly COMMON_PROJECT_DIRS=(
    "$HOME/Projects"
    "$HOME/projects"
    "$HOME/src"
    "$HOME/code"
    "$HOME/workspace"
    "$HOME/dev"
    "$HOME/Development"
    "$HOME/work"
)

# Check if jenv is installed
check_jenv_installed() {
    if [ ! -d "$JENV_HOME" ]; then
        print_message "skip" "jenv not found at $JENV_HOME"
        return 1
    fi
    return 0
}

# Remove jenv from chezmoi management
remove_from_chezmoi() {
    print_message "info" "Removing jenv from chezmoi management"

    if command_exists chezmoi; then
        if chezmoi unmanaged ~/.jenv >/dev/null 2>&1 || chezmoi forget ~/.jenv >/dev/null 2>&1; then
            print_message "success" "jenv removed from chezmoi state"
        else
            print_message "info" "jenv was not managed by chezmoi (this is expected)"
        fi
    else
        print_message "warning" "chezmoi command not found, skipping state cleanup"
    fi
}

# Remove jenv directory
remove_jenv_directory() {
    print_message "info" "Removing jenv directory: $JENV_HOME"

    if [ -d "$JENV_HOME" ]; then
        if rm -rf "$JENV_HOME"; then
            print_message "success" "jenv directory removed successfully"
            return 0
        else
            print_message "error" "Failed to remove jenv directory"
            return 1
        fi
    else
        print_message "skip" "jenv directory not found"
        return 1
    fi
}

# Find .java-version files
find_java_version_files() {
    local java_version_files=()

    print_message "info" "Searching for .java-version files in common project directories..."

    for dir in "${COMMON_PROJECT_DIRS[@]}"; do
        if [ -d "$dir" ]; then
            while IFS= read -r -d '' file; do
                java_version_files+=("$file")
            done < <(find "$dir" -maxdepth 3 -name ".java-version" -type f -print0 2>/dev/null)
        fi
    done

    # Also check home directory
    if [ -f "$HOME/.java-version" ]; then
        java_version_files+=("$HOME/.java-version")
    fi

    if [ ${#java_version_files[@]} -eq 0 ]; then
        print_message "info" "No .java-version files found"
        return 1
    fi

    print_message "info" "Found ${#java_version_files[@]} .java-version file(s):"
    for file in "${java_version_files[@]}"; do
        local version
        version=$(cat "$file" 2>/dev/null || echo "unknown")
        echo "  - $file (version: $version)"
    done

    printf '%s\n' "${java_version_files[@]}"
}

# Remove .java-version files
remove_java_version_files() {
    local files
    if ! files=$(find_java_version_files); then
        return 0
    fi

    local file_array=()
    while IFS= read -r file; do
        file_array+=("$file")
    done <<< "$files"

    print_message "info" "Removing .java-version files..."
    local removed=0

    for file in "${file_array[@]}"; do
        if [ -f "$file" ]; then
            if rm "$file" 2>/dev/null; then
                print_message "success" "Removed: $file"
                ((removed++))
            else
                print_message "warning" "Failed to remove: $file"
            fi
        fi
    done

    if [ $removed -gt 0 ]; then
        print_message "success" "Removed $removed .java-version file(s)"
    fi
}

# Main function
main() {
    print_message "info" "jenv Uninstallation Script"

    # Check if jenv is installed
    if ! check_jenv_installed; then
        exit 0
    fi

    # Display what will be removed
    print_message "info" "This script will remove:"
    echo "  1. jenv directory: $JENV_HOME"
    echo "  2. jenv from chezmoi state"
    echo "  3. .java-version files from project directories"
    echo ""
    print_message "warning" "Note: Shell configuration (~/.zshrc) must be manually updated to remove jenv initialization"
    echo ""

    # Remove from chezmoi state first
    remove_from_chezmoi

    # Remove jenv directory
    if ! remove_jenv_directory; then
        print_message "error" "Failed to remove jenv directory, aborting"
        exit 1
    fi

    # Remove .java-version files
    remove_java_version_files

    print_message "success" "jenv uninstallation completed"
    print_message "info" "You may need to restart your terminal or source your shell profile"
    print_message "info" "Don't forget to remove jenv initialization from ~/.zshrc (lines 169-172)"
}

# Run main function
main "$@"
{{ end -}}
