{{- if and (eq .chezmoi.os "darwin") .has_keepassxc_db -}}
#!/bin/bash

# Source shared utility functions
source "{{ .chezmoi.sourceDir -}}/scripts/script-utils.sh"

# Check required tools
if ! require_tools atuin; then
    print_message "skip" "atuin not installed - skipping login"
    exit 0
fi

print_message "info" "Checking atuin login status..."

# Check if already logged in by looking for session file
SESSION_FILE="$HOME/.local/share/atuin/session"

if [ -f "$SESSION_FILE" ]; then
    print_message "info" "Verifying existing atuin session..."

    # Use atuin doctor to verify the session is valid
    if atuin doctor 2>/dev/null | grep -q '"cloud": true'; then
        print_message "success" "Already logged in to atuin sync"

        # Show last sync time if available
        last_sync=$(atuin doctor 2>/dev/null | grep '"last_sync"' | sed 's/.*"last_sync": "\([^"]*\)".*/\1/')
        if [ -n "$last_sync" ]; then
            print_message "info" "Last sync: $last_sync"
        fi

        exit 0
    else
        print_message "warning" "Session file exists but appears invalid - attempting login"
    fi
fi

print_message "info" "Logging in to atuin sync..."

ATUIN_USERNAME={{ (keepassxc "atuin").UserName | quote }}
ATUIN_PASSWORD={{ (keepassxc "atuin").Password | quote }}
ATUIN_KEY={{ keepassxcAttribute "atuin" "key" | quote }}

if atuin login -u "$ATUIN_USERNAME" -p "$ATUIN_PASSWORD" -k "$ATUIN_KEY"; then
    print_message "success" "Successfully logged in to atuin sync"

    # Trigger initial sync
    print_message "info" "Performing initial sync..."
    if atuin sync; then
        print_message "success" "Initial sync completed"
    else
        print_message "warning" "Initial sync failed - will retry automatically"
    fi
else
    print_message "error" "Failed to login to atuin sync"
    print_message "info" "You can manually login later with: atuin login -u $ATUIN_USERNAME"
    exit 1
fi

{{ end -}}
